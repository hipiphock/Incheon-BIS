<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SYSTEM">

	<!-- 코드 카테고리 리스트 -->
	<select id="selectCodeCateList" parameterType="TbOmmCodeVO" resultType="TbOmmCodeVO">
		SELECT
			*
		FROM
			TB_OMM_CODECATEGORY		
		<if test="searchWord != null and !searchWord.equalsIgnoreCase('')">		
		WHERE
			CDCATEGID LIKE '%' || #{searchWord} || '%'
			OR CDCATEGNM LIKE '%' || #{searchWord} || '%'
		</if>	
			ORDER BY CDCATEGID			
	</select>
	
	<!--코드 정보 조회  -->
	<select id="selectCodeList" parameterType="TbOmmCodeVO" resultType="TbOmmCodeVO">
		SELECT
			CDCATEGID,
            CD,
            CDNM,
            NVL(DETAIL, '-') DETAIL,
            NVL(DESCR,'-') DESCR,
            USEYN
		FROM TB_OMM_CODE
		WHERE
		<choose>
			<when test="cdcategid == 'PROJECTTPCD'">
			CDCATEGID = #{cdcategid}
			AND CD != '50' 
			AND USEYN = '1'  ORDER BY CDNM ASC 
			</when>			
			<otherwise>
			CDCATEGID = #{cdcategid}
			ORDER BY TO_NUMBER(CD)
			</otherwise>
		</choose>
	</select>
	
	<!--신규코드 값 조회  -->
	<select id="selectNewCodeCd" parameterType="TbOmmCodeVO" resultType="TbOmmCodeVO">
		 SELECT NVL(MAX(CD)+1, 0) AS CD FROM TB_OMM_CODE WHERE CDCATEGID = #{cdcategid}
	</select>
	
	<!-- 관계기관 목록 -->
	<select id="selectRelatorgidList" parameterType="TbOmmCodeVO" resultType="TbOmmCodeVO">
		SELECT 
		    RELATORGID, ORGTPCD, ORGNM
		FROM 
		    TB_ECM_EXORG
		WHERE
			1=1
			<if test="orgtpcd != null and !orgtpcd.equalsIgnoreCase('')">
		    AND ORGTPCD = #{orgtpcd}
			</if>
	</select>
	
	<!-- 코드 삭제 -->
	<update id="deleteCode" parameterType="TbOmmCodeVO">
		DELETE FROM
			TB_OMM_CODE
		WHERE
			CDCATEGID = #{cdcategid}		
	</update>
	
	<!-- 코드 삽입 -->
	<update id="insertCode" parameterType="TbOmmCodeVO">
		INSERT INTO 
			TB_OMM_CODE
				(CDCATEGID, CD, CDNM, DETAIL, DESCR, USEYN) 
			VALUES
				(
				#{cdcategid},
				#{cd},
				#{cdnm},
				#{detail},
				#{descr},
				#{useyn}
				)				
	</update>
	
	<!-- 시스템 접속 이력 조회 -->
	<select id="selectLoginHisList" parameterType="TbOmmUserVO" resultType="TbOmmUserVO">
  		SELECT   
	  		SH.HISTNO,
	  		SH.USERID,
	  		B.USERNM,
	  		A.AUTHNM,
            TO_CHAR(LOGIN_STARTDT, 'YYYY-MM-DD HH24:MI:SS') AS LOGIN_STARTDT,
            TO_CHAR(LOGIN_ENDDT, 'YYYY-MM-DD HH24:MI:SS') AS LOGIN_ENDDT,
            IPADDR
    	FROM   
    		TB_OMH_BITUSERLOGIN SH, TB_OMM_USER B, TB_OMM_USERAUTH C, TB_OMM_AUTH A 
   		WHERE       
   			LOGIN_STARTDT <![CDATA[>=]]> TO_DATE(#{login_startdt}||'000000', 'YYYYMMDDHH24MISS')
           	AND (LOGIN_ENDDT <![CDATA[<=]]> TO_DATE(#{login_enddt}||'235959', 'YYYYMMDDHH24MISS')
           		OR LOGIN_ENDDT IS NULL)
           	<if test="userid != null and !userid.equalsIgnoreCase('')">
	           	AND SH.USERID LIKE '%' || #{userid} || '%'
			</if>
			<if test="ipaddr != null and !ipaddr.equalsIgnoreCase('')">
	           	AND IPADDR LIKE '%' || #{ipaddr} || '%'
			</if>
           	AND SH.USERID = B.USERID
            AND B.USERID = C.USERID
            AND C.AUTHID = A.AUTHID 
		ORDER BY LOGIN_STARTDT
	</select>
	
	<!-- 데이터베이스 사용량 조회 -->
	<select id="selectTableSpaceList" resultType="TableSpaceVO">
		SELECT   
			A.*, 
			CASE
            	WHEN A.USED_RATE <![CDATA[>]]> 85.0 AND A.USED_RATE <![CDATA[<=]]> 95.0 THEN 1
                WHEN A.USED_RATE <![CDATA[>]]> 95.0 THEN 2
                ELSE 0
            END AS SIZE_WARNING, 
            TO_CHAR(A.USED_SIZE,'FM99990.00') || '/' || TO_CHAR(A.CURRENT_SIZE,'FM99990.00')  CURRENT_USAGE                
  		FROM   
  			(SELECT   
  				A.TABLESPACE_NAME,
                ROUND (A.BYTES_ALLOC / 1024 / 1024 / 1024, 2) CURRENT_SIZE,
                ROUND (NVL (B.BYTES_FREE, 0) / 1024 / 1024 / 1024, 2) FREE_SIZE,
                ROUND ((A.BYTES_ALLOC - NVL (B.BYTES_FREE, 0)) / 1024 / 1024 / 1024,2) USED_SIZE,
                ROUND ( (NVL (B.BYTES_FREE, 0) / A.BYTES_ALLOC) * 100, 2) FREE_RATE,
                100 - ROUND ( (NVL (B.BYTES_FREE, 0) / A.BYTES_ALLOC) * 100, 2) USED_RATE,
                ROUND (MAXBYTES / 1024 / 1024 / 1024, 2) MAX_SIZE
             FROM   
             	(SELECT   
             		F.TABLESPACE_NAME,
       		        SUM (F.BYTES) BYTES_ALLOC,
                    SUM (DECODE (F.AUTOEXTENSIBLE,
                                            'YES',
                                            F.MAXBYTES,
                                            'NO',
                                            F.BYTES))
                                  MAXBYTES
                        FROM   DBA_DATA_FILES F
                    GROUP BY   TABLESPACE_NAME) A,
                   (  SELECT   F.TABLESPACE_NAME, SUM (F.BYTES) BYTES_FREE
                        FROM   DBA_FREE_SPACE F
                    GROUP BY   TABLESPACE_NAME) B
       		WHERE   A.TABLESPACE_NAME = B.TABLESPACE_NAME(+)
          	UNION
            SELECT   TABLESPACE_NAME,
                     ROUND (SUM (BYTES_USED + BYTES_FREE) / 1048576 / 1024, 2),
                     ROUND (SUM (BYTES_FREE) / 1048576 / 1024, 2),
                     ROUND (SUM (BYTES_USED) / 1048576 / 1024, 2),
                     ROUND ((SUM (BYTES_FREE) / SUM (BYTES_USED + BYTES_FREE)) * 100, 2 ) FREE_RATE,
                     100 - ROUND ((SUM (BYTES_FREE) / SUM (BYTES_USED + BYTES_FREE)) * 100, 2 ) USED_RATE,
                     ROUND (MAX (BYTES_USED + BYTES_FREE) /  1024 / 1024 / 1024, 2)
              FROM   SYS.V_$TEMP_SPACE_HEADER
        	  GROUP BY   TABLESPACE_NAME) A
 		WHERE 
 			A.TABLESPACE_NAME IN('TS_IBMS_DED', 'TS_IBMS_DEI', 'TS_HIXF', 'TS_HIXG')  
	</select>
	
	<!-- 서버 상태 조회 -->
	<select id="selectServerStateList" resultType="TbServerStatusVO">
		SELECT 
			B.SERVER_NAME, 
            TO_CHAR(TO_DATE(A.UPDATE_DT, 'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS') UPDATE_DT,
            CASE
            	WHEN TO_DATE(A.UPDATE_DT, 'YYYY-MM-DD HH24:MI:SS') <![CDATA[>=]]> (SYSDATE - 5/1440)
            	THEN A.SERVER_STATE
            	ELSE '0' 
            END SERVER_STATE,	 
            A.TOTAL_MEMORY,
            A.USE_MEMORY
		FROM 
			SERVER_STATUS A, SERVER B
    	WHERE 
    		A.SERVER_ID = B.SERVER_ID
    		AND A.SERVER_ID  NOT IN ('124', '200')
	</select>
	
	<!-- 서버별 BIT 상태 조회 -->
	<select id="selectBitServerStatList"  resultType="TbServerStatusVO">
  		WITH IC_STAT AS
    	(
    		SELECT 
              A.SERVER_ID
              ,C.SERVER_NAME
              ,CASE 
                WHEN B.COLLDT IS NULL OR B.COLLDT <![CDATA[<]]> (SYSDATE - 5 / 1440)
              	THEN 0
              	ELSE 1
              END FLAG
          	FROM 
          		TB_BIT_PROTOCOL_MAPPING A, TB_ISC_BITSTAT B, SERVER C, TB_OMM_BIT D
            WHERE 
            	A.BITID = B.BITID(+)
              	AND A.BITID = D.BITID
              	AND A.SERVER_ID = C.SERVER_ID
              	AND A.SERVER_ID NOT IN (123)
    	),
    	W_STAT AS
    	(
    		SELECT 
           		A.SERVER_ID
               ,C.SERVER_NAME
               ,CASE 
               	WHEN B.REG_DATE IS NULL OR B.REG_DATE <![CDATA[<]]> (SYSDATE - 5 / 1440)
              	THEN 0
              	ELSE 1
               END FLAG
       		FROM 
       			TB_BIT_PROTOCOL_MAPPING A, WBISOWNER.TB_WBIS_BIT_STAT B, SERVER C, TB_OMM_BIT D
            WHERE 
            	A.BITID = B.BIT_ID(+)
             	AND A.BITID = D.BITID
              	AND A.SERVER_ID = C.SERVER_ID
             	AND A.SERVER_ID IN (123)
      	) 
      	
   	 	SELECT 
        	A.*,
        	A.TOTAL_CNT - A.FAIL_CNT AS CONN_CNT
      	FROM  
      	(  
	    	SELECT 
	    		A.SERVER_ID,
	    		A.SERVER_NAME
	        	,COUNT(*) AS TOTAL_CNT
	      		,(	SELECT COUNT(*) 
	      			FROM IC_STAT B  
	      			WHERE	
	      				B.SERVER_ID = A.SERVER_ID 
	                  	AND B.FLAG = 0
	          	) AS FAIL_CNT
	     	FROM
	      		IC_STAT A
	      	GROUP BY A.SERVER_ID, A.SERVER_NAME
	      	UNION 
	      	SELECT 
	      		A.SERVER_ID,
	      		A.SERVER_NAME
	        	,COUNT(*) AS TOTAL_CNT
	      		,(SELECT COUNT(*) FROM W_STAT B  WHERE	B.SERVER_ID = A.SERVER_ID 
	                  AND B.FLAG = 0
	           	) AS FAIL_CNT
	      	FROM
	      		W_STAT A
	      	GROUP BY A.SERVER_ID, A.SERVER_NAME
		) A
		ORDER BY A.SERVER_ID
	
	
	
		<!-- SELECT 
			AA.SERVER_ID
     		,BB.SERVER_NAME
     		,AA.TOTAL_CNT
     		,AA.FAIL_CNT
     		,AA.TOTAL_CNT - AA.FAIL_CNT AS CONN_CNT
  		FROM (
  			SELECT 
  				A.SERVER_ID
             	,COUNT(*) AS TOTAL_CNT
             	,(SELECT COUNT(*) FROM TB_BIT_CONNECT_SERVER AA, TB_ISC_BITSTAT BB  WHERE	AA.SERVER_ID = A.SERVER_ID 
                  AND AA.BITID = BB.BITID
                	AND BB.COLLDT <![CDATA[<]]> (SYSDATE - 5 / 1440)
               	) AS FAIL_CNT
          	FROM 
          		TB_BIT_CONNECT_SERVER A
         	GROUP BY A.SERVER_ID 
         	) AA
      		,SERVER BB
 		WHERE 
 			AA.SERVER_ID = BB.SERVER_ID
 		ORDER BY 1 ASC -->
	</select>
	
	<!-- 코드 카테고리 삭제 -->
	<delete id="deleteCodecategory" parameterType="TbOmmCodeVO">
		DELETE
			TB_OMM_CODECATEGORY
		WHERE
			CDCATEGID = #{cdcategid}
	</delete>
	
	
	<!-- 코드 카테고리 수정 -->
	<update id="updateCodecategory" parameterType="TbOmmCodeVO">
		UPDATE TB_OMM_CODECATEGORY
		SET
			CDCATEGNM = #{cdcategnm},
			DETAIL = #{detail, jdbcType=VARCHAR},
			DESCR = #{descr, jdbcType=VARCHAR}
		WHERE
			CDCATEGID = #{cdcategid}
	</update>
	
	<!-- 코드 카테고리 등록 -->
	<insert id="insertCodecategory" parameterType="TbOmmCodeVO">
		INSERT INTO TB_OMM_CODECATEGORY
		(
			CDCATEGID,
			CDCATEGNM,
			DETAIL,
			DESCR
		)
		VALUES
		(
			#{cdcategid},
			#{cdcategnm},
			#{detail, jdbcType=VARCHAR},
			#{descr, jdbcType=VARCHAR}
		)
	</insert>
	
	
	<!-- ************************ 이하 구 버전 / 수정 코드 위로 올리기 ********************* -->
	
	
	

	
	

	<!-- 시스템 등록 -->
	<insert id="insertSysInfo" parameterType="SystemInformationVO">
		INSERT INTO 
			SYSTEM_INFORMATION 
		(
   			SYSTEM_ID, 
   			SYSTEM_NAME, 
   			USE_FLAG, 
  			PORT
		) 
		VALUES 
		( 
			#{system_id},
 			#{system_name},
			'1', 
			6000
		)
	</insert>

	<!-- 파라미터 그룹 조회 -->
	<select id="selectParamGrpList" resultType="BisParameterVO">
		SELECT 
			* 
		FROM 
			BIS_PARAMETER_GROUP 
		ORDER BY PARAM_GROUP_ID
	</select>
	
	<!-- 파라미터 조회 -->
	<select id="selectParamList" resultType="BisParameterVO">
		SELECT 
			* 
		FROM 
			BIS_PARAMETER
		WHERE
			TRIM(PARAM_GROUP_ID) = #{param_group_id} 
		ORDER BY PARAM_ID
	</select>
	
	<!-- 시스템 접속 이력 조회 -->
	<!-- <select id="selectLoginHisList" parameterType="SystemLoginHistoryVO" resultType="SystemLoginHistoryVO">
  		SELECT   
	  		SH.SYSTEM_ID,
	  		SH.SESSION_ID,
	  		SH.USER_ID,
	  		B.USER_NAME,
	  		C.RANK_NAME,
	  		SH.HOST_NAME,
	  		SH.HOST_IP,
		  	CD.CODE_EXPLAIN,
            TO_CHAR(TO_DATE(SH.CONN_DT,'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS CONNECT_DT,
            TO_CHAR(TO_DATE(SH.DISCONNECT_DT,'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS DISCONNECT_DT,
            TO_CHAR(TO_DATE(SH.DISCONNECT_DT,'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS KEEPALIVE_DT
    	FROM   
    		SYSTEM_LOGIN_HISTORY SH, USERS B, USER_RANK C, 
            (SELECT * FROM COMMON_CODE WHERE TABLE_NAME = 'OPERATIONMENU' AND FIELD_NAME = 'PROGRAM_ID' ORDER BY CODE) CD
   		WHERE       
   			CONN_DT <![CDATA[>=]]> #{st_date}||'000000'
           	AND CONN_DT <![CDATA[<=]]> #{ed_date}||'235959'
           	<if test="user_id != null and !user_id.equalsIgnoreCase('')">
	           	AND USER_ID LIKE '%' || #{user_id} || '%'
			</if>
			<if test="host_ip != null and !host_ip.equalsIgnoreCase('')">
	           	AND HOST_IP LIKE '%' || #{host_ip} || '%'
			</if>
			<if test="host_name != null and !host_name.equalsIgnoreCase('')">
	           	AND HOST_NAME LIKE '%' || #{host_name} || '%'
			</if>
           	AND CD.CODE = SH.SYSTEM_ID
           	AND SH.USER_ID = B.USER_ID
            AND B.RANK_ID = C.RANK_ID
		ORDER BY CONN_DT
	</select> -->
	
	<!-- 파라미터 수정 -->
	<update id="updateParameter" parameterType="BisParameterVO">
		UPDATE 
			BIS_PARAMETER 
		SET 
			PARAM_VALUE = #{param_value, jdbcType=VARCHAR},
			PARAM_EXPLAIN = #{param_explain, jdbcType=VARCHAR},
			REMARK = #{remark, jdbcType=VARCHAR},
			UPDATE_DT = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
		WHERE
			TRIM(PARAM_GROUP_ID) = #{param_group_id} 
			AND TRIM(PARAM_ID) = #{param_id}
	</update>

	<!-- 공휴일 조회 -->
	<select id="selectHolidayList" parameterType="DatePlanVO" resultType="DatePlanVO">
		SELECT
			*
		FROM
			DATE_PLAN
		WHERE
			0 = 0
			<if test="st_dt != null and !st_dt.equalsIgnoreCase('')">
			AND TO_DATE(ST_DT, 'YYYY') = TO_DATE(#{st_dt}, 'YYYY')
			</if>
		ORDER BY ST_DT
	</select> 
	
	<!-- 공휴일 등록 -->
	<insert id="insertHoliday" parameterType="DatePlanVO">
		INSERT INTO DATE_PLAN
		(
			DATE_TYPE,
			ST_DT,
			ED_DT,
			DATA_EXPLAIN
		)
		VALUES
		(
			(SELECT MAX(DATE_TYPE) FROM DATE_PLAN),
			#{st_dt},
			#{ed_dt},
			#{data_explain}
		)
	</insert> 
	
	<!-- 공휴일 수정 -->
	<update id="updateHoliday" parameterType="DatePlanVO">
		UPDATE
			 DATE_PLAN
		SET
			ST_DT = #{st_dt},
			ED_DT = #{ed_dt},
			DATA_EXPLAIN = #{data_explain}
		WHERE
			DATE_TYPE = #{date_type}
	</update> 
	
	<!-- 공휴일 삭제 -->
	<delete id="deleteHoliday" parameterType="DatePlanVO">
		DELETE FROM 
			 DATE_PLAN
		WHERE
			DATE_TYPE = #{date_type}
	</delete> 
	
</mapper>
















